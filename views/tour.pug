extends base 

block append head 
    link(href='https://api.mapbox.com/mapbox-gl-js/v3.5.1/mapbox-gl.css', rel='stylesheet')
    script(src='https://api.mapbox.com/mapbox-gl-js/v3.5.1/mapbox-gl.js')
block append script 
    //- script(src='/js/mapbox.js')
    

mixin overviewBox(label, text, icon)
    div.overview-box__detail
        svg.overview-box__icon
            use(xlink:href=`/img/icons.svg#icon-${icon}`)
        span.overview-box__label #{label}
        span.overview-box__text #{text}

block content
    section.section-header
        div.header__hero-overlay
        img.header__hero-img(src=`/img/tours/${tour.imageCover}`, alt="tets image")
        div.heading-box
            h1.heading-primary
                span= tour.name
            div.heading-box__group
                div.heading-box__detail
                    svg.heading-box__icon
                        use(xlink:href='/img/icons.svg#icon-clock')
                    span.heading-box__text #{tour.duration} days
                div.heading-box__detail
                    svg.heading-box__icon
                        use(xlink:href='/img/icons.svg#icon-map-pin')
                    span.heading-box__text #{tour.startLocation.description}

    section.section-description
        div.overview-box
            div
                div.overview-box__group
                h2.heading-secondary.ma-bt-lg Quick facts
                
                - const date = tour.startDates[0].toLocaleString('en-us', {month: 'long', year: 'numeric'})

                +overviewBox('Next date', date, 'calendar')
                +overviewBox('Difficulty', tour.difficulty, 'trending-up')
                +overviewBox('Group size', `${tour.maxGroupSize} people`, 'user')
                +overviewBox('Rating', `${tour.ratingsAverage} / 5`, 'star')
               
                div.overview-box__group
                    h2.heading-secondary.ma-bt-lg Your tour guides
                    each guide in tour.guides
                        div.overview-box__detail
                            img.overview-box__img(src=`/img/users/${guide.photo}`, alt=`${guide.role}`)
                            - if(guide.role === 'lead-guide')
                                span.overview-box__label Lead Guide
                            - if(guide.role === 'guide')
                                span.overview-box__label Tour Guide
                            span.overview-box__text #{guide.name}
        div.description-box
            div.description-box
                h2.heading-secondary.ma-bt-lg About #{tour.name} tour
                - const description = tour.description.split('\n')
                each paragraph in description
                    p.description__text #{paragraph}
    section.section-pictures
        each img, index in tour.images
            div.picture-box
                img(class="picture-box__img picture-box__img--" + (index+1), src=`/img/tours/${img}`, alt=`${tour.name}`)
    section.section-map
        #map(data-locations=`${JSON.stringify(tour.locations)}`)
        //- div#map
         script
            mapboxgl.accessToken = 'pk.eyJ1Ijoiam9uYXNzY2htZWR0bWFubiIsImEiOiJjam54ZmM5N3gwNjAzM3dtZDNxYTVlMnd2In0.ytpI7V7w7cyT1Kq5rT9Z1A';
            const geojson = {
                type: 'FeatureCollection',
                features: [
                    {
                        type: 'Feature',
                        geometry: {
                            type: 'Point',
                            coordinates: [-112.987418, 37.198125]
                        },
                        properties: {
                            description: 'Zion Canyon National Park'
                        }
                    },
                    {
                        type: 'Feature',
                        geometry: {
                            type: 'Point',
                            coordinates: [-111.376161, 36.86438]
                        },
                        properties: {
                            description: 'Antelope Canyon'
                        }
                    },
                    {
                        type: 'Feature',
                        geometry: {
                            type: 'Point',
                            coordinates: [-112.115763, 36.058973]
                        },
                        properties: {
                            description: 'Grand Canyon National Park'
                        }
                    },
                    {
                        type: 'Feature',
                        geometry: {
                            type: 'Point',
                            coordinates: [-116.107963, 34.011646]
                        },
                        properties: {
                            description: 'Joshua Tree National Park'
                        }
                    }
                ]
            };
            const map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/jonasschmedtmann/cjnxfn3zk7bj52rpegdltx58h',
                scrollZoom: false
            });
            const bounds = new mapboxgl.LngLatBounds();
            geojson.features.forEach(function(marker) {
                var el = document.createElement('div');
                el.className = 'marker';
                new mapboxgl.Marker({
                    element: el,
                    anchor: 'bottom'
                })
                    .setLngLat(marker.geometry.coordinates)
                    .addTo(map);
                new mapboxgl.Popup({
                    offset: 30,
                    closeOnClick: false
                })
                    .setLngLat(marker.geometry.coordinates)
                    .setHTML('<p>' + marker.properties.description + '</p>')
                    .addTo(map);
                bounds.extend(marker.geometry.coordinates);
            });
            map.fitBounds(bounds, {
                padding: {
                    top: 200,
                    bottom: 150,
                    left: 50,
                    right: 50
                }
            });
            map.on('load', function() {
                map.addLayer({
                    id: 'route',
                    type: 'line',
                    source: {
                        type: 'geojson',
                        data: {
                            type: 'Feature',
                            properties: {},
                            geometry: {
                                type: 'LineString',
                                coordinates: [
                                    [-112.987418, 37.198125],
                                    [-111.376161, 36.86438],
                                    [-112.115763, 36.058973],
                                    [-116.107963, 34.011646]
                                ]
                            }
                        }
                    },
                    layout: {
                        'line-join': 'round',
                        'line-cap': 'round'
                    },
                    paint: {
                        'line-color': '#55c57a',
                        'line-opacity': 0.6,
                        'line-width': 3
                    }
                });
            });

    section.section-reviews
        div.reviews
            each review in tour.reviews
                div.reviews__card
                    div.reviews__avatar
                        img.reviews__avatar-img(src=`/img/users/${review.user.photo}`, alt=`${review.user.name}`)
                        h6.reviews__user #{review.user.name}
                    p.reviews__text #{review.review}
                    div.reviews__rating
                        each star in [1, 2, 3, 4, 5]
                            svg.reviews__star(class=`reviews__star--${review.rating >= star ? 'active' : 'inactive'}`)
                                use(xlink:href='/img/icons.svg#icon-star')
    section.section-cta
        div.cta
            div.cta__img.cta__img--logo
                img(src='/img/logo-white.png', alt='Natours logo')
            img.cta__img.cta__img--1(src=`/img/tours/${tour.images[1]}`, alt='Tour Picture 1')
            img.cta__img.cta__img--2(src=`/img/tours/${tour.images[2]}`, alt='Tour Picture 2')
            div.cta__content
                h2.heading-secondary What are you waiting for?
                p.cta__text #{tour.duration} days. 1 adventure. Infinite memories. Make it yours today!
                button.btn.btn--green.span-all-rows Book tour now!

